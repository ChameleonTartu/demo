plugins {
	// Apply the Kotlin JVM plugin to add support for Kotlin on the JVM.
	id 'org.jetbrains.kotlin.jvm' version '1.3.50'
	id 'org.jetbrains.kotlin.plugin.noarg' version '1.3.50'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.3.50'
	id 'org.jetbrains.kotlin.plugin.allopen' version '1.3.50'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.3.50'
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'org.jetbrains.kotlin.kapt' version '1.3.50'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'com.github.ben-manes.versions' version '0.27.0'
}

group = "com.example"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = 11
ext['junit-jupiter.version'] = '5.5.2'
ext['mockito.version'] = '2.27.0'

repositories {
	mavenCentral()
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-data-jdbc")
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.springframework.boot:spring-boot-devtools")
	runtimeOnly("org.postgresql:postgresql")
}

repositories {
	mavenCentral()
	jcenter()
	maven { url 'https://repo.spring.io/milestone' }
}

allOpen {
	annotation("javax.persistence.Entity")
	annotation("javax.persistence.MappedSuperclass")
	annotation("javax.persistence.Embeddable")
}

dependencies {
	// Use the Kotlin JDK 8 standard library.
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

	// Use the Kotlin test library.
	testImplementation 'org.jetbrains.kotlin:kotlin-test'

	// Use the Kotlin JUnit integration.
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

	// Java 9+ compatibility dependencies
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'javax.inject:javax.inject:1'

	// Spring boot
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	implementation 'commons-codec:commons-codec:1.13'

	// Kotlin
	implementation 'org.jetbrains.kotlin:kotlin-reflect'

	// Utils
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.10.0'
	implementation 'io.github.microutils:kotlin-logging:1.6.26'
	implementation 'com.vladmihalcea:hibernate-types-52:2.5.0'
	implementation 'org.postgresql:postgresql:42.2.8'

	implementation 'com.google.guava:guava:28.1-jre'

	// Testing
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude module: 'junit'
	}
	testImplementation 'io.rest-assured:rest-assured:3.3.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.0'

	// Mockito
	testImplementation 'com.nhaarman:mockito-kotlin:1.6.0'
	testImplementation 'org.mockito:mockito-inline:2.27.0'
	testImplementation 'org.mockito:mockito-junit-jupiter'

	// JUnit 5 (Jupiter)
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '11'
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '11'
	}
}

